function start_ssh_agent() {
  eval $(ssh-agent)
}

function add_ssh_identity() {
  ssh-add -l 1> /dev/null 2>&1

  if [ $? -ne 0 ]; then
    ssh-add -t 1d
  fi
}

function compute_ssh_agent_pid() {
  local socket="$1"

  local pid=$(
    echo "$socket" \
    | sed -E 's/\/tmp\/ssh-[A-Za-z0-9]+\/agent\.([0-9]+)/\1/g')

  pid=$(( pid + 1 ))

  echo $pid
}

function is_ssh_agent_running() {
  local pid=$1

  ps -a | grep $pid | grep ssh-agent 1> /dev/null 2>&1
}

function prune_bad_ssh_agent_socket() {
  local socket="$1"
  local socket_dir="$(dirname "$socket")"

  rm -rf "$socket_dir"
}

function is_ssh_agent_pid_mismatch() {
  local pid=$1

  [ ! -z "${SSH_AGENT_PID+0}" ] \
  && [ $SSH_AGENT_PID -ne $pid ]
}

function connect_agent() {
  local socket="$1"
  local pid=$2

  eval 'export SSH_AGENT_PID=$pid'
  eval 'export SSH_AUTH_SOCK="$socket"'

  add_ssh_identity
}

function connect_or_kill_agent() {
  local socket="$1"
  local pid=$2

  if is_ssh_agent_pid_mismatch $pid; then
    kill $pid
  else
    connect_agent "$socket" $pid
  fi
}

function process_ssh_agent_socket() {
  local socket="$1"
  local pid=$(compute_ssh_agent_pid "$socket")

  if is_ssh_agent_running $pid; then
    connect_or_kill_agent "$socket" $pid
  else
    prune_bad_ssh_agent_socket "$socket"
  fi
}

function connect_to_existing_ssh_agent() {
  local sockets="$1"

  local socket=
  for socket in $sockets; do
    process_ssh_agent_socket "$socket"
  done
}

function ssh_agent_connect() {
  local ssh_agent_sockets=$(find /tmp -type s -name 'agent.*')

  if [ -z "$ssh_agent_sockets" ];then
    start_ssh_agent \
    && add_ssh_identity
  else
    connect_to_existing_ssh_agent "$ssh_agent_sockets"
  fi
}

alias ssh-auth='ssh_agent_connect'


